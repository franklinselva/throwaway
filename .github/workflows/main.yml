# Build cargo repository for all platforms

name: Aries Compile CI

on:
  push:

jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest
    name: Build Aries - ${{ matrix.distro }}-${{ matrix.arch }}

    strategy:
      matrix:
        distro: [ubuntu20.04]
        arch: [amd64]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: stable
          override: true

      - name: Build Aries - ${{ matrix.distro }}-${{ matrix.arch }}
        run: |
          git clone https://github.com/plaans/aries.git --branch master
          cd aries
          cargo build --release
          # Add CI Tests for aries
          sudo apt-get install python3
          python3 ci/grpc.py
          cp target/release/up-server ../up_aries/bins/aries-linux-${{ matrix.arch }}
          cd ..
          strip up_aries/bins/aries-linux-${{ matrix.arch }} # Strip the binary to reduce size
          git add up_aries/bins/aries-linux-${{ matrix.arch }}
          git config --global user.name "github actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "update aries binary for ${{ matrix.distro }}-${{ matrix.arch }}"
          git pull --rebase
          git push
  build-linux-cross-compile:
    runs-on: ubuntu-latest
    name: Build Aries - ${{ matrix.distro }}-${{ matrix.arch }}

    strategy:
      matrix:
        distro: [ubuntu20.04]
        arch: [aarch64]

    steps:
      - uses: actions/checkout@v2
      - name: Clone Aries
        run: |
          git clone https://github.com/plaans/aries.git --branch master
      - uses: uraimo/run-on-arch-action@v2
        name: Build Aries binary on ${{ matrix.distro }} for ${{ matrix.arch }}
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          # githubToken: ${{ secrets.GITHUB_TOKEN }}

          setup: |
            sudo apt-get update
            sudo apt-get -y upgrade
            sudo apt-get install -y libssl-dev libudev-dev pkg-config curl git
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            echo $HOME/.cargo/bin >> $GITHUB_PATH
            source $HOME/.cargo/env
              cd aries
            cargo build --release --bin up-server
            # Add CI Tests for aries
            sudo apt-get install python3
            python3 ci/grpc.py
            cp target/release/up-server ../up_aries/bins/aries-linux-${{ matrix.arch }}

          dockerRunArgs: |
            --privileged --volume "${PWD}:/workdir" --workdir /workdir

          shell: /bin/sh
          run: |
            echo "Build Aries binary on ${{ matrix.distro }} for ${{ matrix.arch }}"

      - name: Upload Aries binary
        run: |
            strip up_aries/bins/aries-linux-${{ matrix.arch }} # Strip the binary to reduce size
            git add up_aries/bins/aries-linux-${{ matrix.arch }}
            git config --global user.name "github actions"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -m "update aries binary for ${{ matrix.distro }}-${{ matrix.arch }}"
            git pull --rebase
            git push

  build-macos:
    runs-on: macos-latest
    name: Build Aries - ${{ matrix.distro }}-${{ matrix.arch }}

    strategy:
      matrix:
        distro: [macos-latest, macos-arm64]
        arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: stable
          override: true

      - name: Build Aries binary on ${{ matrix.distro }} for ${{ matrix.arch }}
        run: |
          git clone https://github.com/plaans/aries.git --branch master
          cd aries
          cargo build --release --bin up-server

          # Add CI Tests for aries
          brew install python@3.8
          python3 ci/grpc.py

          # Copy the binary to the bins folder
          cp target/release/up-server ../up_aries/bins/aries-macos-${{ matrix.arch }}
          cd ..
          strip up_aries/bins/aries-macos-${{ matrix.arch }} # Strip the binary to reduce size

          # Upload the binary
          git add up_aries/bins/aries-macos-${{ matrix.arch }}
          git config --global user.name "github actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "update aries binary for ${{ matrix.distro }}-${{ matrix.arch }}"
          git pull --rebase
          git push

  build-windows:
    runs-on: windows-latest
    name: Build Aries - ${{ matrix.distro }}-${{ matrix.arch }}

    strategy:
      matrix:
        distro: [windows-latest]
        arch: [amd64]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          toolchain: stable
          override: true

      - name: Build Aries binary - ${{ matrix.distro }}-${{ matrix.arch }}
        run: |
          git clone https://github.com/plaans/aries.git --branch master
          cd aries
          cargo build --release --bin up-server
          cp target/release/up-server.exe ../up_aries/bins/aries-windows-${{ matrix.arch }}.exe
          cd ..
          strip up_aries/bins/aries-windows-${{ matrix.arch }}.exe # Strip the binary to reduce size
          git add up_aries/bins/aries-windows-${{ matrix.arch }}.exe
          git config --global user.name "github actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "update aries binary for ${{ matrix.distro }}-${{ matrix.arch }}"
          git pull --rebase
          git push